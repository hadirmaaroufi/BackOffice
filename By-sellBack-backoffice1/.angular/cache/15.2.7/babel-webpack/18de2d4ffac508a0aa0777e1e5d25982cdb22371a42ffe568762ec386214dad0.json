{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nexport class MapComponent {\n  initMap() {\n    this.map = L.map('map', {\n      center: this.centroid,\n      zoom: 12\n    });\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 18,\n      minZoom: 10,\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n    });\n    // create 5 random jitteries and add them to map\n    const jittery = Array(5).fill(this.centroid).map(x => [x[0] + (Math.random() - .5) / 10, x[1] + (Math.random() - .5) / 10]).map(x => L.marker(x)).forEach(x => x.addTo(this.map));\n    tiles.addTo(this.map);\n  }\n  constructor() {\n    this.centroid = [42.3601, -71.0589]; //\n  }\n\n  ngOnInit() {\n    this.initMap();\n  }\n}\nMapComponent.ɵfac = function MapComponent_Factory(t) {\n  return new (t || MapComponent)();\n};\nMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapComponent,\n  selectors: [[\"app-map\"]],\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"map-container\"], [1, \"map-frame\"], [\"id\", \"map\"]],\n  template: function MapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\".map-container[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  margin: 30px;\\n}\\n\\n.map-frame[_ngcontent-%COMP%] {\\n  border: 2px solid black;\\n  height: 100%;\\n}\\n\\n#map[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWFwL21hcC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uL0J5LXNlbGxCYWNrLWJhY2tvZmZpY2UxJTIwKDEpL0J5LXNlbGxCYWNrLWJhY2tvZmZpY2UxL3NyYy9hcHAvbWFwL21hcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7QUNDSjs7QURFRTtFQUNFLHVCQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREVFO0VBQ0UsWUFBQTtBQ0NKIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcC1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luOiAzMHB4O1xyXG4gIH1cclxuICBcclxuICAubWFwLWZyYW1lIHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAjbWFwIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9IiwiLm1hcC1jb250YWluZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbWFyZ2luOiAzMHB4O1xufVxuXG4ubWFwLWZyYW1lIHtcbiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuI21hcCB7XG4gIGhlaWdodDogMTAwJTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,OAAO,KAAKA,CAAC,MAAM,SAAS;;AAO5B,OAAM,MAAOC,YAAY;EAKfC,OAAO;IACb,IAAI,CAACC,GAAG,GAAGH,CAAC,CAACG,GAAG,CAAC,KAAK,EAAE;MACtBC,MAAM,EAAE,IAAI,CAACC,QAAQ;MACrBC,IAAI,EAAE;KACP,CAAC;IAEF,MAAMC,KAAK,GAAGP,CAAC,CAACQ,SAAS,CAAC,oDAAoD,EAAE;MAC9EC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE;KACd,CAAC;IAEF;IACA,MAAMC,OAAO,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAACT,QAAQ,CAAC,CAACF,GAAG,CAC5CY,CAAC,IAAI,CAACA,CAAC,CAAC,CAAC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,IAAE,EAAE,EAAEF,CAAC,CAAC,CAAC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,IAAE,EAAE,CAAE,CACvE,CAACd,GAAG,CACHY,CAAC,IAAIf,CAAC,CAACkB,MAAM,CAACH,CAAuB,CAAC,CACvC,CAACI,OAAO,CACPJ,CAAC,IAAIA,CAAC,CAACK,KAAK,CAAC,IAAI,CAACjB,GAAG,CAAC,CACvB;IAEHI,KAAK,CAACa,KAAK,CAAC,IAAI,CAACjB,GAAG,CAAC;EAEvB;EAEAkB;IA3BQ,aAAQ,GAAuB,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;EA2B5C;;EAEhBC,QAAQ;IACN,IAAI,CAACpB,OAAO,EAAE;EAChB;;AAlCWD,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRzBC,8BAA2B;MAErBA,yBAAoB;MACtBA,iBAAM","names":["L","MapComponent","initMap","map","center","centroid","zoom","tiles","tileLayer","maxZoom","minZoom","attribution","jittery","Array","fill","x","Math","random","marker","forEach","addTo","constructor","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\hadir\\Downloads\\By-sellBack-backoffice1 (1)\\By-sellBack-backoffice1\\src\\app\\map\\map.component.ts","C:\\Users\\hadir\\Downloads\\By-sellBack-backoffice1 (1)\\By-sellBack-backoffice1\\src\\app\\map\\map.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  private map: L.Map;\n  private centroid: L.LatLngExpression = [42.3601, -71.0589]; //\n\n  private initMap(): void {\n    this.map = L.map('map', {\n      center: this.centroid,\n      zoom: 12\n    });\n\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 18,\n      minZoom: 10,\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n    });\n\n    // create 5 random jitteries and add them to map\n    const jittery = Array(5).fill(this.centroid).map( \n        x => [x[0] + (Math.random() - .5)/10, x[1] + (Math.random() - .5)/10 ]\n      ).map(\n        x => L.marker(x as L.LatLngExpression)\n      ).forEach(\n        x => x.addTo(this.map)\n      );\n\n    tiles.addTo(this.map);\n  \n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.initMap();\n  }\n\n}","<div class=\"map-container\">\n    <div class=\"map-frame\">\n      <div id=\"map\"></div>\n    </div>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}