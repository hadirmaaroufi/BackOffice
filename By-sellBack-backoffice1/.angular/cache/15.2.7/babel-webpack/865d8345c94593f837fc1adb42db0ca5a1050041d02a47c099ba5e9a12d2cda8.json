{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/chat.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ListChatComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ListChatComponent_tr_28_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const chat_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateChat(chat_r1.id));\n    });\n    i0.ɵɵtext(16, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ListChatComponent_tr_28_Template_button_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const chat_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteChat(chat_r1.id));\n    });\n    i0.ɵɵtext(18, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const chat_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(chat_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(chat_r1.message);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(chat_r1.recipient);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(chat_r1.sender);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(chat_r1.codePromo.code);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(13, 6, chat_r1.sentAt, \"dd/MM/yyyy HH:mm:ss\"));\n  }\n}\nexport class ListChatComponent {\n  constructor(chatService, router) {\n    this.chatService = chatService;\n    this.router = router;\n    this.chats = [];\n  }\n  ngOnInit() {\n    // Fetch list of chats\n    this.chatService.getAllChats().subscribe(data => {\n      this.chats = data;\n      console.log(\"aaa\", this.chats);\n    }, error => {\n      console.log(error);\n    });\n  }\n  deleteChat(idChat) {\n    this.chatService.deleteChat(idChat).subscribe(() => {\n      // remove the deleted blog from the list of blogs\n      this.chats = this.chats.filter(blog => blog.id !== idChat);\n    });\n  }\n  updateChat(idChat) {\n    this.router.navigate(['/edit-chat', idChat]);\n  }\n}\nListChatComponent.ɵfac = function ListChatComponent_Factory(t) {\n  return new (t || ListChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService), i0.ɵɵdirectiveInject(i2.Router));\n};\nListChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListChatComponent,\n  selectors: [[\"app-list-chat\"]],\n  decls: 29,\n  vars: 1,\n  consts: [[1, \"content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [\"routerLink\", \"/add-chat\", 1, \"btn\", \"btn-success\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function ListChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h1\");\n      i0.ɵɵtext(7, \"List of Chats\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"a\", 6);\n      i0.ɵɵtext(9, \"Add Chat\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"table\", 7)(11, \"thead\")(12, \"tr\")(13, \"th\");\n      i0.ɵɵtext(14, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Recipient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Sender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Code Promo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Created At\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\");\n      i0.ɵɵtext(26, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"tbody\");\n      i0.ɵɵtemplate(28, ListChatComponent_tr_28_Template, 19, 9, \"tr\", 8);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chats);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.RouterLink, i3.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAuBIA,0BAA+B;IACzBA,YAAa;IAAAA,iBAAK;IACtBA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,aAAyB;IAAAA,iBAAK;IAClCA,2BAAI;IAAAA,aAA4C;;IAAAA,iBAAK;IACrDA,2BAAI;IAC8BA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAACA,qBAAI;IAAAA,iBAAS;IAC3EA,mCAA8D;IAA/BA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAAEA,uBAAM;IAAAA,iBAAS;;;;IAR3EA,eAAa;IAAbA,gCAAa;IACbA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAoB;IAApBA,uCAAoB;IACpBA,eAAiB;IAAjBA,oCAAiB;IACjBA,eAAyB;IAAzBA,4CAAyB;IACzBA,eAA4C;IAA5CA,kFAA4C;;;ACnBtD,OAAM,MAAOC,iBAAiB;EAG5BC,YACUC,WAAwB,EAEvBC,MAAc;IAFf,gBAAW,GAAXD,WAAW;IAEV,WAAM,GAANC,MAAM;IALjB,UAAK,GAAW,EAAE;EAOX;EAEPC,QAAQ;IAEN;IACA,IAAI,CAACF,WAAW,CAACG,WAAW,EAAE,CAACC,SAAS,CACtCC,IAAI,IAAG;MACL,IAAI,CAACC,KAAK,GAAGD,IAAI;MACjBE,OAAO,CAACC,GAAG,CAAC,KAAK,EAAE,IAAI,CAACF,KAAK,CAAC;IAChC,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CACF;EACD;EACAC,UAAU,CAACC,MAAc;IACvB,IAAI,CAACX,WAAW,CAACU,UAAU,CAACC,MAAM,CAAC,CAACP,SAAS,CAAC,MAAK;MACjD;MACA,IAAI,CAACE,KAAK,GAAG,IAAI,CAACA,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,MAAM,CAAC;IAC5D,CAAC,CAAC;EACJ;EAEAI,UAAU,CAACJ,MAAc;IACvB,IAAI,CAACV,MAAM,CAACe,QAAQ,CAAC,CAAC,YAAY,EAAEL,MAAM,CAAC,CAAC;EAC9C;;AAhCSb,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV9BxB,kCAAyB;MAOrBA,6BAAa;MAAAA,iBAAK;MACtBA,4BAAkD;MAAAA,wBAAQ;MAAAA,iBAAI;MAE9DA,iCAAoD;MAG1CA,mBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAChBA,2BAAI;MAAAA,0BAAS;MAAAA,iBAAK;MAClBA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MACfA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MACnBA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MACnBA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAGpBA,8BAAO;MACLA,mEAWK;MACPA,iBAAQ;;;MAZeA,gBAAQ;MAARA,mCAAQ","names":["i0","ListChatComponent","constructor","chatService","router","ngOnInit","getAllChats","subscribe","data","chats","console","log","error","deleteChat","idChat","filter","blog","id","updateChat","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\hadir\\Downloads\\By-sellBack-backoffice1 (1)\\By-sellBack-backoffice1\\src\\app\\component\\chat\\list-chat\\list-chat.component.html","C:\\Users\\hadir\\Downloads\\By-sellBack-backoffice1 (1)\\By-sellBack-backoffice1\\src\\app\\component\\chat\\list-chat\\list-chat.component.ts"],"sourcesContent":["<section class=\"content\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n        \n<h1>List of Chats</h1>\n<a routerLink=\"/add-chat\" class=\"btn btn-success\">Add Chat</a>\n</div>\n<table  class=\"table  table-bordered table-striped\">\n  <thead>\n    <tr>\n      <th>ID</th>\n      <th>Message</th>\n      <th>Recipient</th>\n      <th>Sender</th>\n      <th>Code Promo</th>\n      <th>Created At</th>\n      <th>Actions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let chat of chats\">\n      <td>{{ chat.id }}</td>\n      <td>{{ chat.message }}</td>\n      <td>{{ chat.recipient }}</td>\n      <td>{{ chat.sender }}</td>\n      <td>{{ chat.codePromo.code }}</td>\n      <td>{{chat.sentAt | date:'dd/MM/yyyy HH:mm:ss'}}</td>\n      <td>\n        <button class=\"btn btn-primary\" (click)=\"updateChat(chat.id)\">Edit</button>\n        <button class=\"btn btn-danger\" (click)=\"deleteChat(chat.id)\" >Delete</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n</div>\n</div>\n</div>\n\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Chat } from 'src/app/models/chat';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-list-chat',\n  templateUrl: './list-chat.component.html',\n  styleUrls: ['./list-chat.component.scss']\n})\nexport class ListChatComponent implements OnInit {\n  chats: Chat[] = [];\n\n  constructor(\n    private chatService: ChatService ,\n    \n     private router: Router\n    \n     ) { }\n\n  ngOnInit(): void {\n   \n    // Fetch list of chats\n    this.chatService.getAllChats().subscribe(\n      data => {\n        this.chats = data;\n        console.log(\"aaa\", this.chats)\n      },\n      error => {\n        console.log(error);\n      }\n    );\n    }\n    deleteChat(idChat: number) {\n      this.chatService.deleteChat(idChat).subscribe(() => {\n        // remove the deleted blog from the list of blogs\n        this.chats = this.chats.filter(blog => blog.id !== idChat);\n      });\n    }\n    \n    updateChat(idChat: number) {\n      this.router.navigate(['/edit-chat', idChat]);\n    }\n    \n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}