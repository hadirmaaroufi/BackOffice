{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/cammand-line.service\";\nimport * as i3 from \"@angular/forms\";\nexport class EditCammandLineComponent {\n  constructor(route, router, commandLineService) {\n    this.route = route;\n    this.router = router;\n    this.commandLineService = commandLineService;\n  }\n  ngOnInit() {\n    this.commandLineId = this.route.snapshot.params['id'];\n    this.commandLineService.getListCommandLineById(this.commandLineId).subscribe(data => {\n      console.log(data);\n      this.commandLine = data;\n    }, error => console.log(error));\n  }\n  updateCommandLine() {\n    this.commandLineService.updateCommandLine(this.commandLine).subscribe(data => console.log(data), error => console.log(error));\n    this.gotoList();\n  }\n  onSubmit() {\n    this.updateCommandLine();\n  }\n  gotoList() {\n    this.router.navigate(['/list-command-line']);\n  }\n}\nEditCammandLineComponent.ɵfac = function EditCammandLineComponent_Factory(t) {\n  return new (t || EditCammandLineComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CommandeLineService));\n};\nEditCammandLineComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditCammandLineComponent,\n  selectors: [[\"app-edit-cammand-line\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"text-center\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"quantity\"], [\"type\", \"number\", \"id\", \"quantity\", \"name\", \"quantity\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function EditCammandLineComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n      i0.ɵɵtext(3, \"Update Command Line\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function EditCammandLineComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Quantity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditCammandLineComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.commandLine.quantity = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"button\", 8);\n      i0.ɵɵtext(11, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.commandLine.quantity);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,wBAAwB;EAInCC,YAAoBC,KAAqB,EAAUC,MAAc,EAAUC,kBAAuC;IAA9F,UAAK,GAALF,KAAK;IAA0B,WAAM,GAANC,MAAM;IAAkB,uBAAkB,GAAlBC,kBAAkB;EAAyB;EAEtHC,QAAQ;IAEN,IAAI,CAACC,aAAa,GAAG,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAErD,IAAI,CAACJ,kBAAkB,CAACK,sBAAsB,CAAC,IAAI,CAACH,aAAa,CAAC,CAC/DI,SAAS,CAACC,IAAI,IAAG;MAChBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,WAAW,GAAGH,IAAI;IACzB,CAAC,EAAEI,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;EACnC;EAEAC,iBAAiB;IACf,IAAI,CAACZ,kBAAkB,CAACY,iBAAiB,CAAC,IAAI,CAACF,WAAW,CAAC,CACxDJ,SAAS,CAACC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,EAAEI,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;IAEpE,IAAI,CAACE,QAAQ,EAAE;EACjB;EAEAC,QAAQ;IACN,IAAI,CAACF,iBAAiB,EAAE;EAC1B;EAEAC,QAAQ;IACN,IAAI,CAACd,MAAM,CAACgB,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;EAC9C;;AA9BWnB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXrCC,8BAAkB;MAEYA,mCAAmB;MAAAA,iBAAK;MAElDA,8BAAuB;MACfA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC3BD,8BAAwB;MACAA,wBAAQ;MAAAA,iBAAQ;MACtCA,gCAAoH;MAA5CA;QAAA;MAAA,EAAkC;MAA1GA,iBAAoH;MAEtHA,kCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;;;MAFaA,eAAkC;MAAlCA,kDAAkC","names":["EditCammandLineComponent","constructor","route","router","commandLineService","ngOnInit","commandLineId","snapshot","params","getListCommandLineById","subscribe","data","console","log","commandLine","error","updateCommandLine","gotoList","onSubmit","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\hadir\\Downloads\\By-sellBack-backoffice1 (1)\\By-sellBack-backoffice1\\src\\app\\component\\Cammand_line\\edit-cammand-line\\edit-cammand-line.component.ts","C:\\Users\\hadir\\Downloads\\By-sellBack-backoffice1 (1)\\By-sellBack-backoffice1\\src\\app\\component\\Cammand_line\\edit-cammand-line\\edit-cammand-line.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommandLine } from 'src/app/models/cammand_line';\nimport { Produit } from 'src/app/models/produit';\nimport { CommandeLineService } from 'src/app/services/cammand-line.service';\n\n@Component({\n  selector: 'app-edit-cammand-line',\n  templateUrl: './edit-cammand-line.component.html',\n  styleUrls: ['./edit-cammand-line.component.scss']\n})\nexport class EditCammandLineComponent implements OnInit {\n  commandLineId: number;\n  commandLine: CommandLine;\n\n  constructor(private route: ActivatedRoute, private router: Router, private commandLineService: CommandeLineService) { }\n\n  ngOnInit() {\n\n    this.commandLineId = this.route.snapshot.params['id'];\n    \n    this.commandLineService.getListCommandLineById(this.commandLineId)\n      .subscribe(data => {\n        console.log(data)\n        this.commandLine = data;\n      }, error => console.log(error));\n  }\n\n  updateCommandLine() {\n    this.commandLineService.updateCommandLine(this.commandLine)\n      .subscribe(data => console.log(data), error => console.log(error));\n\n    this.gotoList();\n  }\n\n  onSubmit() {\n    this.updateCommandLine();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/list-command-line']);\n  }\n}","<div class=\"card\">\n    <div class=\"card-header\">\n      <h3 class=\"text-center\">Update Command Line</h3>\n    </div>\n    <div class=\"card-body\">\n      <form (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"quantity\">Quantity</label>\n          <input type=\"number\" class=\"form-control\" id=\"quantity\" name=\"quantity\" [(ngModel)]=\"commandLine.quantity\" required>\n        </div>\n        <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n      </form>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}