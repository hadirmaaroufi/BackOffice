{"ast":null,"code":"\"use strict\";\n\nfunction paginate(totalItems, currentPage, pageSize, maxPages) {\n  if (currentPage === void 0) {\n    currentPage = 1;\n  }\n  if (pageSize === void 0) {\n    pageSize = 10;\n  }\n  if (maxPages === void 0) {\n    maxPages = 10;\n  }\n  // calculate total pages\n  var totalPages = Math.ceil(totalItems / pageSize);\n  // ensure current page isn't out of range\n  if (currentPage < 1) {\n    currentPage = 1;\n  } else if (currentPage > totalPages) {\n    currentPage = totalPages;\n  }\n  var startPage, endPage;\n  if (totalPages <= maxPages) {\n    // total pages less than max so show all pages\n    startPage = 1;\n    endPage = totalPages;\n  } else {\n    // total pages more than max so calculate start and end pages\n    var maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);\n    var maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;\n    if (currentPage <= maxPagesBeforeCurrentPage) {\n      // current page near the start\n      startPage = 1;\n      endPage = maxPages;\n    } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\n      // current page near the end\n      startPage = totalPages - maxPages + 1;\n      endPage = totalPages;\n    } else {\n      // current page somewhere in the middle\n      startPage = currentPage - maxPagesBeforeCurrentPage;\n      endPage = currentPage + maxPagesAfterCurrentPage;\n    }\n  }\n  // calculate start and end item indexes\n  var startIndex = (currentPage - 1) * pageSize;\n  var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n  // create an array of pages to ng-repeat in the pager control\n  var pages = Array.from(Array(endPage + 1 - startPage).keys()).map(function (i) {\n    return startPage + i;\n  });\n  // return object with all pager properties required by the view\n  return {\n    totalItems: totalItems,\n    currentPage: currentPage,\n    pageSize: pageSize,\n    totalPages: totalPages,\n    startPage: startPage,\n    endPage: endPage,\n    startIndex: startIndex,\n    endIndex: endIndex,\n    pages: pages\n  };\n}\nmodule.exports = paginate;","map":{"version":3,"names":["paginate","totalItems","currentPage","pageSize","maxPages","totalPages","Math","ceil","startPage","endPage","maxPagesBeforeCurrentPage","floor","maxPagesAfterCurrentPage","startIndex","endIndex","min","pages","Array","from","keys","map","i","module","exports"],"sources":["C:/Users/hadir/Downloads/By-sellBack-backoffice1 (1)/By-sellBack-backoffice1/node_modules/jw-paginate/lib/jw-paginate.js"],"sourcesContent":["\"use strict\";\nfunction paginate(totalItems, currentPage, pageSize, maxPages) {\n    if (currentPage === void 0) { currentPage = 1; }\n    if (pageSize === void 0) { pageSize = 10; }\n    if (maxPages === void 0) { maxPages = 10; }\n    // calculate total pages\n    var totalPages = Math.ceil(totalItems / pageSize);\n    // ensure current page isn't out of range\n    if (currentPage < 1) {\n        currentPage = 1;\n    }\n    else if (currentPage > totalPages) {\n        currentPage = totalPages;\n    }\n    var startPage, endPage;\n    if (totalPages <= maxPages) {\n        // total pages less than max so show all pages\n        startPage = 1;\n        endPage = totalPages;\n    }\n    else {\n        // total pages more than max so calculate start and end pages\n        var maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);\n        var maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;\n        if (currentPage <= maxPagesBeforeCurrentPage) {\n            // current page near the start\n            startPage = 1;\n            endPage = maxPages;\n        }\n        else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\n            // current page near the end\n            startPage = totalPages - maxPages + 1;\n            endPage = totalPages;\n        }\n        else {\n            // current page somewhere in the middle\n            startPage = currentPage - maxPagesBeforeCurrentPage;\n            endPage = currentPage + maxPagesAfterCurrentPage;\n        }\n    }\n    // calculate start and end item indexes\n    var startIndex = (currentPage - 1) * pageSize;\n    var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n    // create an array of pages to ng-repeat in the pager control\n    var pages = Array.from(Array((endPage + 1) - startPage).keys()).map(function (i) { return startPage + i; });\n    // return object with all pager properties required by the view\n    return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n    };\n}\nmodule.exports = paginate;\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,CAACC,UAAU,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EAC3D,IAAIF,WAAW,KAAK,KAAK,CAAC,EAAE;IAAEA,WAAW,GAAG,CAAC;EAAE;EAC/C,IAAIC,QAAQ,KAAK,KAAK,CAAC,EAAE;IAAEA,QAAQ,GAAG,EAAE;EAAE;EAC1C,IAAIC,QAAQ,KAAK,KAAK,CAAC,EAAE;IAAEA,QAAQ,GAAG,EAAE;EAAE;EAC1C;EACA,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACN,UAAU,GAAGE,QAAQ,CAAC;EACjD;EACA,IAAID,WAAW,GAAG,CAAC,EAAE;IACjBA,WAAW,GAAG,CAAC;EACnB,CAAC,MACI,IAAIA,WAAW,GAAGG,UAAU,EAAE;IAC/BH,WAAW,GAAGG,UAAU;EAC5B;EACA,IAAIG,SAAS,EAAEC,OAAO;EACtB,IAAIJ,UAAU,IAAID,QAAQ,EAAE;IACxB;IACAI,SAAS,GAAG,CAAC;IACbC,OAAO,GAAGJ,UAAU;EACxB,CAAC,MACI;IACD;IACA,IAAIK,yBAAyB,GAAGJ,IAAI,CAACK,KAAK,CAACP,QAAQ,GAAG,CAAC,CAAC;IACxD,IAAIQ,wBAAwB,GAAGN,IAAI,CAACC,IAAI,CAACH,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1D,IAAIF,WAAW,IAAIQ,yBAAyB,EAAE;MAC1C;MACAF,SAAS,GAAG,CAAC;MACbC,OAAO,GAAGL,QAAQ;IACtB,CAAC,MACI,IAAIF,WAAW,GAAGU,wBAAwB,IAAIP,UAAU,EAAE;MAC3D;MACAG,SAAS,GAAGH,UAAU,GAAGD,QAAQ,GAAG,CAAC;MACrCK,OAAO,GAAGJ,UAAU;IACxB,CAAC,MACI;MACD;MACAG,SAAS,GAAGN,WAAW,GAAGQ,yBAAyB;MACnDD,OAAO,GAAGP,WAAW,GAAGU,wBAAwB;IACpD;EACJ;EACA;EACA,IAAIC,UAAU,GAAG,CAACX,WAAW,GAAG,CAAC,IAAIC,QAAQ;EAC7C,IAAIW,QAAQ,GAAGR,IAAI,CAACS,GAAG,CAACF,UAAU,GAAGV,QAAQ,GAAG,CAAC,EAAEF,UAAU,GAAG,CAAC,CAAC;EAClE;EACA,IAAIe,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAAER,OAAO,GAAG,CAAC,GAAID,SAAS,CAAC,CAACW,IAAI,EAAE,CAAC,CAACC,GAAG,CAAC,UAAUC,CAAC,EAAE;IAAE,OAAOb,SAAS,GAAGa,CAAC;EAAE,CAAC,CAAC;EAC3G;EACA,OAAO;IACHpB,UAAU,EAAEA,UAAU;IACtBC,WAAW,EAAEA,WAAW;IACxBC,QAAQ,EAAEA,QAAQ;IAClBE,UAAU,EAAEA,UAAU;IACtBG,SAAS,EAAEA,SAAS;IACpBC,OAAO,EAAEA,OAAO;IAChBI,UAAU,EAAEA,UAAU;IACtBC,QAAQ,EAAEA,QAAQ;IAClBE,KAAK,EAAEA;EACX,CAAC;AACL;AACAM,MAAM,CAACC,OAAO,GAAGvB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}