{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:9000/bns/Category';\n  }\n  getCategorys() {\n    return this.http.get(`${this.baseUrl}/retrieve-all-Categorys`);\n  }\n  retrieveCategory(idCategory) {\n    return this.http.get(`${this.baseUrl}/retrieve-Category/${idCategory}`);\n  }\n  addCategory(category) {\n    return this.http.post(`${this.baseUrl}/add-Category`, category);\n  }\n  removeCategory(categoryId) {\n    return this.http.delete(`${this.baseUrl}/remove-Category/${categoryId}`, {\n      responseType: 'text'\n    });\n  }\n  updateCategory(category) {\n    return this.http.put(`${this.baseUrl}/update-Category`, category);\n  }\n  affecterProduitACategorie(idCategorie, idProduit) {\n    return this.http.post(`${this.baseUrl}/${idCategorie}/produits/${idProduit}`, null);\n  }\n  getClientIp() {\n    return this.http.get(`${this.baseUrl}/client-ip`);\n  }\n}\nCategoryService.ɵfac = function CategoryService_Factory(t) {\n  return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nCategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryService,\n  factory: CategoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,oCAAoC;EAEd;EAExCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,GAAG,IAAI,CAACC,OAAO,yBAAyB,CAAC;EAC5E;EAEAC,gBAAgB,CAACC,UAAkB;IACjC,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,sBAAsBE,UAAU,EAAE,CAAC;EACnF;EAEAC,WAAW,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAW,GAAG,IAAI,CAACL,OAAO,eAAe,EAAEI,QAAQ,CAAC;EAC3E;EAEAE,cAAc,CAACC,UAAkB;IAC/B,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACR,OAAO,oBAAoBO,UAAU,EAAE,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACpG;EAEAC,cAAc,CAACN,QAAkB;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACc,GAAG,CAAU,GAAG,IAAI,CAACX,OAAO,kBAAkB,EAAEI,QAAQ,CAAC;EAC5E;EAEAQ,yBAAyB,CAACC,WAAmB,EAAEC,SAAiB;IAC9D,OAAO,IAAI,CAACjB,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACL,OAAO,IAAIa,WAAW,aAAaC,SAAS,EAAE,EAAE,IAAI,CAAC;EAC1F;EAEAC,WAAW;IACT,OAAO,IAAI,CAAClB,IAAI,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,OAAO,YAAY,CAAC;EAC3D;;AAhCWL,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAqB,SAAfrB,eAAe;EAAAsB,YAFd;AAAM","names":["CategoryService","constructor","http","getCategorys","get","baseUrl","retrieveCategory","idCategory","addCategory","category","post","removeCategory","categoryId","delete","responseType","updateCategory","put","affecterProduitACategorie","idCategorie","idProduit","getClientIp","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hadir\\Downloads\\By-sellBack-backoffice1 (1)\\By-sellBack-backoffice1\\src\\app\\services\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Category } from '../models/category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  private baseUrl = 'http://localhost:9000/bns/Category';\n\n  constructor(private http: HttpClient) { }\n\n  getCategorys(): Observable<Category[]> {\n    return this.http.get<Category[]>(`${this.baseUrl}/retrieve-all-Categorys`);\n  }\n\n  retrieveCategory(idCategory: number): Observable<Category> {\n    return this.http.get<Category>(`${this.baseUrl}/retrieve-Category/${idCategory}`);\n  }\n\n  addCategory(category: Category): Observable<Category> {\n    return this.http.post<Category>(`${this.baseUrl}/add-Category`, category);\n  }\n\n  removeCategory(categoryId: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/remove-Category/${categoryId}`, { responseType: 'text' });\n  }\n\n  updateCategory(category: Category): Observable<boolean> {\n    return this.http.put<boolean>(`${this.baseUrl}/update-Category`, category);\n  }\n\n  affecterProduitACategorie(idCategorie: number, idProduit: number): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/${idCategorie}/produits/${idProduit}`, null);\n  }\n\n  getClientIp(): Observable<string> {\n    return this.http.get<string>(`${this.baseUrl}/client-ip`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}