{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/chat.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/code-promo.service\";\nimport * as i5 from \"@angular/common\";\nfunction AddChatComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const code_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", code_r1.idCode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(code_r1.code);\n  }\n}\nexport class AddChatComponent {\n  constructor(formBuilder, chatService, router, codePromoService) {\n    this.formBuilder = formBuilder;\n    this.chatService = chatService;\n    this.router = router;\n    this.codePromoService = codePromoService;\n    this.codepromoList = [];\n  }\n  ngOnInit() {\n    this.codePromoService.getAllCodePromos().subscribe(data => {\n      this.codepromoList = data;\n    }, error => console.log(error));\n    this.chatForm = this.formBuilder.group({\n      message: ['', Validators.required],\n      sender: ['', Validators.required],\n      recipient: ['', Validators.required],\n      idcode: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    const chat = this.chatForm.value;\n    chat.sentAt = new Date();\n    chat.codePromo = this.idcode;\n    this.chatService.addChat(chat).subscribe(response => {\n      console.log(response);\n      this.chatForm.reset();\n    }, error => {\n      console.log(error);\n    });\n    this.router.navigate(['list-chat']);\n  }\n}\nAddChatComponent.ɵfac = function AddChatComponent_Factory(t) {\n  return new (t || AddChatComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ChatService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CodePromoService));\n};\nAddChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddChatComponent,\n  selectors: [[\"app-add-chat\"]],\n  decls: 24,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-8\", \"offset-md-2\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"message\"], [\"type\", \"text\", \"formControlName\", \"message\", \"id\", \"message\", 1, \"form-control\"], [\"for\", \"sender\"], [\"type\", \"text\", \"formControlName\", \"sender\", \"id\", \"sender\", 1, \"form-control\"], [\"for\", \"recipient\"], [\"type\", \"text\", \"formControlName\", \"recipient\", \"id\", \"recipient\", 1, \"form-control\"], [\"id\", \"idcode\", \"formControlName\", \"idcode\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n  template: function AddChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n      i0.ɵɵtext(4, \"Add Chat\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function AddChatComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Sender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Recipient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"select\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AddChatComponent_Template_select_ngModelChange_18_listener($event) {\n        return ctx.idcode = $event;\n      });\n      i0.ɵɵelementStart(19, \"option\", 12);\n      i0.ɵɵtext(20, \"Choose a code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, AddChatComponent_option_21_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 14);\n      i0.ɵɵtext(23, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.chatForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.idcode);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.codepromoList);\n    }\n  },\n  dependencies: [i5.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;ICkBvDC,kCAAiE;IAAAA,YAAa;IAAAA,iBAAS;;;;IAA5CA,sCAAqB;IAACA,eAAa;IAAbA,kCAAa;;;ADN1F,OAAM,MAAOC,gBAAgB;EAK3BC,YACSC,WAAwB,EACvBC,WAAwB,EACxBC,MAAc,EACdC,gBAAmC;IAHpC,gBAAW,GAAXH,WAAW;IACV,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IACN,qBAAgB,GAAhBC,gBAAgB;IAN1B,kBAAa,GAAiB,EAAE;EAO1B;EAENC,QAAQ;IACN,IAAI,CAACD,gBAAgB,CAACE,gBAAgB,EAAE,CAACC,SAAS,CAChDC,IAAI,IAAG;MAEL,IAAI,CAACC,aAAa,GAAGD,IAAI;IAC3B,CAAC,EACDE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC1B;IACH,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACZ,WAAW,CAACa,KAAK,CAAC;MACrCC,OAAO,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACmB,QAAQ,CAAC;MAClCC,MAAM,EAAE,CAAC,EAAE,EAAEpB,UAAU,CAACmB,QAAQ,CAAC;MACjCE,SAAS,EAAE,CAAC,EAAE,EAAErB,UAAU,CAACmB,QAAQ,CAAC;MACpCG,MAAM,EAAE,CAAC,EAAE,EAAEtB,UAAU,CAACmB,QAAQ;KACjC,CAAC;EACJ;EAEAI,QAAQ;IACN,MAAMC,IAAI,GAAS,IAAI,CAACR,QAAQ,CAACS,KAAa;IAC9CD,IAAI,CAACE,MAAM,GAAG,IAAIC,IAAI,EAAE;IACxBH,IAAI,CAACI,SAAS,GAAG,IAAI,CAACN,MAAM;IAC5B,IAAI,CAACjB,WAAW,CAACwB,OAAO,CAACL,IAAI,CAAC,CAACd,SAAS,CACtCoB,QAAQ,IAAG;MACThB,OAAO,CAACC,GAAG,CAACe,QAAQ,CAAC;MACrB,IAAI,CAACd,QAAQ,CAACe,KAAK,EAAE;IAEvB,CAAC,EACDlB,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CACF;IACD,IAAI,CAACP,MAAM,CAAC0B,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;;AA3CW9B,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb7BpC,8BAAuB;MAGXA,wBAAQ;MAAAA,iBAAK;MACjBA,+BAAqD;MAAxBA;QAAA,OAAYqC,cAAU;MAAA,EAAC;MAClDrC,8BAAwB;MACDA,uBAAO;MAAAA,iBAAQ;MACpCA,2BAA+E;MACjFA,iBAAM;MACNA,+BAAwB;MACFA,uBAAM;MAAAA,iBAAQ;MAClCA,4BAA6E;MAC/EA,iBAAM;MACNA,+BAAwB;MACCA,0BAAS;MAAAA,iBAAQ;MACxCA,6BAAmF;MACrFA,iBAAM;MACNA,mCAAwF;MAArBA;QAAA;MAAA,EAAoB;MACrFA,mCAAiB;MAAAA,8BAAa;MAAAA,iBAAS;MACvCA,0EAAuF;MACzFA,iBAAS;MACTA,mCAA+C;MAAAA,uBAAM;MAAAA,iBAAS;;;MAjB1DA,eAAsB;MAAtBA,wCAAsB;MAayCA,gBAAoB;MAApBA,oCAAoB;MAE5DA,eAAgB;MAAhBA,2CAAgB","names":["Validators","i0","AddChatComponent","constructor","formBuilder","chatService","router","codePromoService","ngOnInit","getAllCodePromos","subscribe","data","codepromoList","error","console","log","chatForm","group","message","required","sender","recipient","idcode","onSubmit","chat","value","sentAt","Date","codePromo","addChat","response","reset","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\hadir\\Downloads\\By-sellBack-backoffice1 (1)\\By-sellBack-backoffice1\\src\\app\\component\\chat\\add-chat\\add-chat.component.ts","C:\\Users\\hadir\\Downloads\\By-sellBack-backoffice1 (1)\\By-sellBack-backoffice1\\src\\app\\component\\chat\\add-chat\\add-chat.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Chat } from 'src/app/models/chat';\nimport { CodePromo } from 'src/app/models/codePromo';\nimport { ChatService } from 'src/app/services/chat.service';\nimport { CodePromoService } from 'src/app/services/code-promo.service';\n\n@Component({\n  selector: 'app-add-chat',\n  templateUrl: './add-chat.component.html',\n  styleUrls: ['./add-chat.component.scss']\n})\nexport class AddChatComponent implements OnInit {\n\n  chatForm: FormGroup;\n  codepromoList : CodePromo[] = [];\n  idcode: any ; \n  constructor\n  (private formBuilder: FormBuilder, \n    private chatService: ChatService , \n    private router :Router,\n    private codePromoService : CodePromoService ,\n    ) { }\n\n  ngOnInit(): void {\n    this.codePromoService.getAllCodePromos().subscribe(\n      data =>\n      {\n        this.codepromoList = data\n      },\n      error => console.log(error)\n      );\n    this.chatForm = this.formBuilder.group({\n      message: ['', Validators.required],\n      sender: ['', Validators.required],\n      recipient: ['', Validators.required],\n      idcode: ['', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    const chat: Chat = this.chatForm.value as Chat;\n    chat.sentAt = new Date();\n    chat.codePromo = this.idcode;\n    this.chatService.addChat(chat).subscribe(\n      response => {\n        console.log(response);\n        this.chatForm.reset();\n        \n      },\n      error => {\n        console.log(error);\n      }\n    );\n    this.router.navigate(['list-chat']);\n  }\n\n}","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\">\n        <h2>Add Chat</h2>\n        <form [formGroup]=\"chatForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"message\">Message</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"message\" id=\"message\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"sender\">Sender</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"sender\" id=\"sender\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recipient\">Recipient</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"recipient\" id=\"recipient\">\n          </div>\n          <select class=\"form-control\" id=\"idcode\" formControlName=\"idcode\"  [(ngModel)]=\"idcode\">\n            <option value=\"\">Choose a code</option>\n            <option *ngFor=\"let code of codepromoList\" [value]=\"code.idCode\">{{code.code}}</option>\n          </select>\n          <button type=\"submit\" class=\"btn btn-primary\" >Submit</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}