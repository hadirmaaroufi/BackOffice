{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommentService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:9000/bns/Comment';\n  }\n  getAllComments() {\n    return this.http.get(`${this.baseUrl}/retrieve-all-Comments`);\n  }\n  getCommentById(id) {\n    return this.http.get(`${this.baseUrl}/comments/${id}`);\n  }\n  addComment(comment) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(`${this.baseUrl}/add-comment`, comment, httpOptions);\n  }\n  removeComment(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  updateComment(id, comment) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.put(`${this.baseUrl}/comments/${id}`, comment, httpOptions);\n  }\n}\nCommentService.ɵfac = function CommentService_Factory(t) {\n  return new (t || CommentService)(i0.ɵɵinject(i1.HttpClient));\n};\nCommentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommentService,\n  factory: CommentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,mCAAmC;EAEb;EAExCC,cAAc;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,OAAO,wBAAwB,CAAC;EAC1E;EAEAC,cAAc,CAACC,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,OAAO,aAAaE,EAAE,EAAE,CAAC;EACjE;EAEAC,UAAU,CAACC,OAAgB;IACzB,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIZ,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IACD,OAAO,IAAI,CAACG,IAAI,CAACU,IAAI,CAAM,GAAG,IAAI,CAACP,OAAO,cAAc,EAAEI,OAAO,EAAEC,WAAW,CAAC;EACjF;EAEAG,aAAa,CAACN,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAM,GAAG,IAAI,CAACT,OAAO,IAAIE,EAAE,EAAE,CAAC;EACvD;EAEAQ,aAAa,CAACR,EAAU,EAAEE,OAAgB;IACxC,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIZ,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IACD,OAAO,IAAI,CAACG,IAAI,CAACc,GAAG,CAAU,GAAG,IAAI,CAACX,OAAO,aAAaE,EAAE,EAAE,EAAEE,OAAO,EAAEC,WAAW,CAAC;EACvF;;AA9BWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAiB,SAAdjB,cAAc;EAAAkB,YAFb;AAAM","names":["HttpHeaders","CommentService","constructor","http","getAllComments","get","baseUrl","getCommentById","id","addComment","comment","httpOptions","headers","post","removeComment","delete","updateComment","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ibtih\\Downloads\\By-sellBack-backoffice1\\By-sellBack-backoffice1\\src\\app\\services\\comment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Comment } from '../models/comment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n\n  private baseUrl = 'http://localhost:9000/bns/Comment';\n\n  constructor(private http: HttpClient) { }\n\n  getAllComments(): Observable<Comment[]> {\n    return this.http.get<Comment[]>(`${this.baseUrl}/retrieve-all-Comments`);\n  }\n\n  getCommentById(id: number): Observable<Comment> {\n    return this.http.get<Comment>(`${this.baseUrl}/comments/${id}`);\n  }\n\n  addComment(comment: Comment): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n    return this.http.post<any>(`${this.baseUrl}/add-comment`, comment, httpOptions);\n  }\n\n  removeComment(id: number): Observable<any> {\n    return this.http.delete<any>(`${this.baseUrl}/${id}`);\n  }\n\n  updateComment(id: number, comment: Comment): Observable<Comment> {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n    return this.http.put<Comment>(`${this.baseUrl}/comments/${id}`, comment, httpOptions);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}