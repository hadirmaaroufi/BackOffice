{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/delivery.service\";\nimport * as i3 from \"@angular/router\";\nexport class AddDeliveryComponent {\n  constructor(aFormGroup, formBuilder, deliveryService, router) {\n    this.aFormGroup = aFormGroup;\n    this.formBuilder = formBuilder;\n    this.deliveryService = deliveryService;\n    this.router = router;\n    this.sitekey = \"6LerM94lAAAAAIuwH4iEXEkhE2TVoM_LmNObCQvl\";\n  }\n  ngOnInit() {\n    this.aFormGroup = this.formBuilder.group({\n      recaptcha: ['', Validators.required]\n    });\n    this.deliveryForm = this.formBuilder.group({\n      address: ['', Validators.required],\n      deliveryDate: ['', Validators.required],\n      deliveryStatus: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      arrivalDate: ['', Validators.required],\n      totalPrice: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    this.deliveryService.addDelivery(this.deliveryForm.value).subscribe(() => {\n      this.router.navigate(['/list-delivery']);\n    });\n  }\n}\nAddDeliveryComponent.ɵfac = function AddDeliveryComponent_Factory(t) {\n  return new (t || AddDeliveryComponent)(i0.ɵɵdirectiveInject(i1.FormGroup), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DeliveryService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAddDeliveryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddDeliveryComponent,\n  selectors: [[\"app-add-delivery\"]],\n  decls: 29,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"address\"], [\"type\", \"text\", \"id\", \"address\", \"formControlName\", \"address\"], [\"for\", \"deliveryDate\"], [\"type\", \"date\", \"id\", \"deliveryDate\", \"formControlName\", \"deliveryDate\"], [\"for\", \"arrivalDate\"], [\"type\", \"date\", \"id\", \"arrivalDate\", \"formControlName\", \"arrivalDate\"], [\"for\", \"totalPrice\"], [\"type\", \"text\", \"id\", \"totalPrice\", \"formControlName\", \"totalPrice\"], [\"for\", \"phoneNumber\"], [\"type\", \"phone\", \"id\", \"phoneNumber\", \"formControlName\", \"phoneNumber\"], [\"for\", \"deliveryStatus\"], [\"type\", \"deliveryStatus\", \"id\", \"deliveryStatus\", \"formControlName\", \"deliveryStatus\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function AddDeliveryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Add Delivery\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddDeliveryComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n      i0.ɵɵtext(5, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n      i0.ɵɵtext(9, \"Delivery Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Arrival Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 7);\n      i0.ɵɵtext(17, \"Total Price :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\")(20, \"label\", 9);\n      i0.ɵɵtext(21, \"Phone number :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\")(24, \"label\", 11);\n      i0.ɵɵtext(25, \"Delivery status :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 13);\n      i0.ɵɵtext(28, \"Add Delivery\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.deliveryForm);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"disabled\", ctx.deliveryForm.invalid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAWnE,OAAM,MAAOC,oBAAoB;EAK/BC,YACYC,UAAqB,EACvBC,WAAwB,EACxBC,eAAgC,EAChCC,MAAc;IAHZ,eAAU,GAAVH,UAAU;IACZ,gBAAW,GAAXC,WAAW;IACX,oBAAe,GAAfC,eAAe;IACf,WAAM,GAANC,MAAM;IANhB,YAAO,GAAY,0CAA0C;EAS7D;EAEAC,QAAQ;IACN,IAAI,CAACJ,UAAU,GAAG,IAAI,CAACC,WAAW,CAACI,KAAK,CAAC;MACvCC,SAAS,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ;KACpC,CAAC;IACF,IAAI,CAACC,YAAY,GAAG,IAAI,CAACP,WAAW,CAACI,KAAK,CAAC;MAEzCI,OAAO,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ,CAAC;MAClCG,YAAY,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACU,QAAQ,CAAC;MACvCI,cAAc,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACU,QAAQ,CAAC;MAEzCK,WAAW,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACU,QAAQ,CAAC;MACtCM,WAAW,EAAG,CAAC,EAAE,EAAEhB,UAAU,CAACU,QAAQ,CAAC;MACvCO,UAAU,EAAG,CAAC,EAAE,EAAEjB,UAAU,CAACU,QAAQ;KACtC,CAAC;EACJ;EAEAQ,QAAQ;IAEN,IAAI,CAACb,eAAe,CAACc,WAAW,CAAC,IAAI,CAACR,YAAY,CAACS,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;MACvE,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;IAC1C,CAAC,CAAC;EACJ;;AAnCWrB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZjCC,0BAAI;MAAAA,4BAAY;MAAAA,iBAAK;MAErBA,+BAAyD;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACtDD,2BAAK;MACkBA,uBAAO;MAAAA,iBAAQ;MACpCA,2BAA0D;MAI9DA,iBAAM;MACFA,2BAAK;MACsBA,8BAAc;MAAAA,iBAAQ;MAChDA,4BAAoE;MAIrEA,iBAAM;MACFA,4BAAK;MACwBA,8BAAa;MAAAA,iBAAQ;MAC9CA,4BAAkE;MAItEA,iBAAM;MACFA,4BAAK;MACuBA,8BAAa;MAAAA,iBAAQ;MAC7CA,4BAAgE;MAIpEA,iBAAM;MACNA,4BAAK;MACwBA,+BAAc;MAAAA,iBAAQ;MAC/CA,6BAAmE;MAIvEA,iBAAM;MACNA,4BAAK;MAC2BA,kCAAiB;MAAAA,iBAAQ;MACrDA,6BAAkF;MAItFA,iBAAM;MAGhBA,mCAAwD;MAAAA,6BAAY;MAAAA,iBAAS;;;MA7CzEA,eAA0B;MAA1BA,4CAA0B;MA6CRA,gBAAiC;MAAjCA,mDAAiC","names":["Validators","AddDeliveryComponent","constructor","aFormGroup","formBuilder","deliveryService","router","ngOnInit","group","recaptcha","required","deliveryForm","address","deliveryDate","deliveryStatus","phoneNumber","arrivalDate","totalPrice","onSubmit","addDelivery","value","subscribe","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\ibtih\\Downloads\\By-sellBack-backoffice1\\By-sellBack-backoffice1\\src\\app\\component\\Delivery\\add-delivery\\add-delivery.component.ts","C:\\Users\\ibtih\\Downloads\\By-sellBack-backoffice1\\By-sellBack-backoffice1\\src\\app\\component\\Delivery\\add-delivery\\add-delivery.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Delivery } from 'src/app/models/delivery';\nimport { DeliveryService } from 'src/app/services/delivery.service';\n\n@Component({\n  selector: 'app-add-delivery',\n  templateUrl: './add-delivery.component.html',\n  styleUrls: ['./add-delivery.component.scss']\n})\nexport class AddDeliveryComponent implements OnInit {\n\n  deliveryForm: FormGroup;\n  sitekey : string = \"6LerM94lAAAAAIuwH4iEXEkhE2TVoM_LmNObCQvl\";\n\n  constructor(\n    protected aFormGroup: FormGroup,\n    private formBuilder: FormBuilder,\n    private deliveryService: DeliveryService,\n    private router: Router\n   \n  ) { \n  }\n\n  ngOnInit(): void {\n    this.aFormGroup = this.formBuilder.group({\n      recaptcha: ['', Validators.required]\n    });\n    this.deliveryForm = this.formBuilder.group({\n \n      address: ['', Validators.required],\n      deliveryDate: ['', Validators.required],\n      deliveryStatus: ['', Validators.required],\n\n      phoneNumber: ['', Validators.required],\n      arrivalDate : ['', Validators.required],\n      totalPrice : ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n   \n    this.deliveryService.addDelivery(this.deliveryForm.value).subscribe(() => {\n      this.router.navigate(['/list-delivery']);\n    });\n  }\n\n}","<h2>Add Delivery</h2>\n\n<form [formGroup]=\"deliveryForm\" (ngSubmit)=\"onSubmit()\">\n  <div>\n    <label for=\"address\">Address</label>\n    <input type=\"text\" id=\"address\" formControlName=\"address\">\n    <!-- <div *ngIf=\"deliveryForm.get('address').invalid && deliveryForm.get('address').touched\">\n      Please enter a delivery address.\n    </div> -->\n</div>\n    <div>\n     <label for=\"deliveryDate\">Delivery Date:</label>\n     <input type=\"date\" id=\"deliveryDate\" formControlName=\"deliveryDate\">\n     <!-- <div *ngIf=\"deliveryForm.get('deliveryDate').invalid && deliveryForm.get('deliveryDate').touched\">\n       Please enter a delivery Date.\n      </div> -->\n    </div>\n        <div>\n            <label for=\"arrivalDate\">Arrival Date:</label>\n            <input type=\"date\" id=\"arrivalDate\" formControlName=\"arrivalDate\">\n            <!-- <div *ngIf=\"deliveryForm.get('arrivalDate').invalid && deliveryForm.get('arrivalDate').touched\">\n              Please enter an arrival Date.\n            </div> -->\n        </div>\n            <div>\n                <label for=\"totalPrice\">Total Price :</label>\n                <input type=\"text\" id=\"totalPrice\" formControlName=\"totalPrice\">\n                <!-- <div *ngIf=\"deliveryForm.get('totalPrice').invalid && deliveryForm.get('totalPrice').touched\">\n                  Please enter a total Price.\n                </div> -->\n            </div>\n            <div>\n                <label for=\"phoneNumber\">Phone number :</label>\n                <input type=\"phone\" id=\"phoneNumber\" formControlName=\"phoneNumber\">\n                <!-- <div *ngIf=\"deliveryForm.get('phoneNumber').invalid && deliveryForm.get('phoneNumber').touched\">\n                  Please enter a total Price.\n                </div> -->\n            </div>\n            <div>\n                <label for=\"deliveryStatus\">Delivery status :</label>\n                <input type=\"deliveryStatus\" id=\"deliveryStatus\" formControlName=\"deliveryStatus\">\n                <!-- <div *ngIf=\"deliveryForm.get('diliveryStatus').invalid && deliveryForm.get('diliveryStatus').touched\">\n                  Please enter a total Price.\n                </div> -->\n            </div>\n\n  \n  <button type=\"submit\" [disabled]=\"deliveryForm.invalid\">Add Delivery</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}