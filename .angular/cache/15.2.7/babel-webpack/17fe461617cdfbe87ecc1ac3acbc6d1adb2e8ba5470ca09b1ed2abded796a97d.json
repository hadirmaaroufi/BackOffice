{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommandeLineService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:9000/bns/CommandeLineController';\n  }\n  addCommandLine(commandLine, idCart) {\n    return this.http.post(`${this.baseUrl}/addCommandLine/${idCart}`, commandLine);\n  }\n  assignProductToCommandeL(ligneCommende, idProduct) {\n    return this.http.put(`${this.baseUrl}/AffecterProduit-LC/${ligneCommende}`, idProduct);\n  }\n  updateCommandLine(commandLine) {\n    return this.http.put(`${this.baseUrl}/updateCommandLine`, commandLine);\n  }\n  deleteCommandLine(id) {\n    return this.http.put(`${this.baseUrl}/deleteCommandLine/${id}`, {});\n  }\n  getListCommandLine() {\n    return this.http.get(`${this.baseUrl}/GetListCommandLine`);\n  }\n  getListCommandLineById(id) {\n    return this.http.get(`${this.baseUrl}/GetListCommandLineById/${id}`);\n  }\n}\nCommandeLineService.ɵfac = function CommandeLineService_Factory(t) {\n  return new (t || CommandeLineService)(i0.ɵɵinject(i1.HttpClient));\n};\nCommandeLineService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommandeLineService,\n  factory: CommandeLineService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,mBAAmB;EAK9BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,kDAAkD;EAE5B;EAExCC,cAAc,CAACC,WAAwB,EAAEC,MAAc;IACrD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAc,GAAG,IAAI,CAACC,OAAO,mBAAmBF,MAAM,EAAE,EAAED,WAAW,CAAC;EAC7F;EAEAI,wBAAwB,CAACC,aAAqB,EAAEC,SAAmB;IACjE,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAO,GAAG,IAAI,CAACJ,OAAO,uBAAuBE,aAAa,EAAE,EAAEC,SAAS,CAAC;EAC9F;EAEAE,iBAAiB,CAACR,WAAwB;IACxC,OAAO,IAAI,CAACF,IAAI,CAACS,GAAG,CAAc,GAAG,IAAI,CAACJ,OAAO,oBAAoB,EAAEH,WAAW,CAAC;EACrF;EAEAS,iBAAiB,CAACC,EAAU;IAC1B,OAAO,IAAI,CAACZ,IAAI,CAACS,GAAG,CAAc,GAAG,IAAI,CAACJ,OAAO,sBAAsBO,EAAE,EAAE,EAAE,EAAE,CAAC;EAClF;EAEAC,kBAAkB;IAChB,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAgB,GAAG,IAAI,CAACT,OAAO,qBAAqB,CAAC;EAC3E;EAEAU,sBAAsB,CAACH,EAAU;IAC/B,OAAO,IAAI,CAACZ,IAAI,CAACc,GAAG,CAAc,GAAG,IAAI,CAACT,OAAO,2BAA2BO,EAAE,EAAE,CAAC;EACnF;;AA7BWd,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAkB,SAAnBlB,mBAAmB;EAAAmB,YAFlB;AAAM","names":["CommandeLineService","constructor","http","addCommandLine","commandLine","idCart","post","baseUrl","assignProductToCommandeL","ligneCommende","idProduct","put","updateCommandLine","deleteCommandLine","id","getListCommandLine","get","getListCommandLineById","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ibtih\\Downloads\\By-sellBack-backoffice1\\By-sellBack-backoffice1\\src\\app\\services\\cammand-line.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CommandLine } from '../models/cammand_line';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommandeLineService {\n\n\n  private baseUrl = 'http://localhost:9000/bns/CommandeLineController';\n\n  constructor(private http: HttpClient) { }\n\n  addCommandLine(commandLine: CommandLine, idCart: number): Observable<CommandLine> {\n    return this.http.post<CommandLine>(`${this.baseUrl}/addCommandLine/${idCart}`, commandLine);\n  }\n\n  assignProductToCommandeL(ligneCommende: number, idProduct: number[]): Observable<void> {\n    return this.http.put<void>(`${this.baseUrl}/AffecterProduit-LC/${ligneCommende}`, idProduct);\n  }\n\n  updateCommandLine(commandLine: CommandLine): Observable<CommandLine> {\n    return this.http.put<CommandLine>(`${this.baseUrl}/updateCommandLine`, commandLine);\n  }\n\n  deleteCommandLine(id: number): Observable<CommandLine> {\n    return this.http.put<CommandLine>(`${this.baseUrl}/deleteCommandLine/${id}`, {});\n  }\n\n  getListCommandLine(): Observable<CommandLine[]> {\n    return this.http.get<CommandLine[]>(`${this.baseUrl}/GetListCommandLine`);\n  }\n\n  getListCommandLineById(id: number): Observable<CommandLine> {\n    return this.http.get<CommandLine>(`${this.baseUrl}/GetListCommandLineById/${id}`);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}