{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/comment.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ListCommentComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ListCommentComponent_tr_20_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const comment_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateCom(comment_r1.idComment));\n    });\n    i0.ɵɵtext(14, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ListCommentComponent_tr_20_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const comment_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteCom(comment_r1.idComment));\n    });\n    i0.ɵɵtext(16, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const comment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r1.idComment);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r1.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 5, comment_r1.createdAt));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(comment_r1.forum);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r1.client);\n  }\n}\nexport class ListCommentComponent {\n  constructor(commentService, router) {\n    this.commentService = commentService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.getComments();\n  }\n  getComments() {\n    this.commentService.getAllComments().subscribe(comments => this.comments = comments);\n  }\n  deleteCom(id) {\n    if (confirm(\"Are you sure you want to delete this comment?\")) {\n      this.commentService.removeComment(id).subscribe(() => {\n        this.comments = this.comments.filter(comments => comments.idComment !== id);\n      });\n    }\n  }\n  updateCom(id) {\n    this.router.navigate(['/edit-comment', id]);\n  }\n}\nListCommentComponent.ɵfac = function ListCommentComponent_Factory(t) {\n  return new (t || ListCommentComponent)(i0.ɵɵdirectiveInject(i1.CommentService), i0.ɵɵdirectiveInject(i2.Router));\n};\nListCommentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListCommentComponent,\n  selectors: [[\"app-list-comment\"]],\n  decls: 21,\n  vars: 1,\n  consts: [[\"routerLink\", \"/add-comment\", 1, \"btn\", \"btn-success\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function ListCommentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"a\", 0);\n      i0.ɵɵtext(3, \"Add Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"table\", 3)(7, \"thead\")(8, \"tr\")(9, \"th\");\n      i0.ɵɵtext(10, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Created At\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Forum\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Client\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, ListCommentComponent_tr_20_Template, 17, 7, \"tr\", 4);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.comments);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.RouterLink, i3.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAgBQA,0BAAqC;IAC/BA,YAAuB;IAAAA,iBAAK;IAChCA,0BAAI;IAAAA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,YAA8B;;IAAAA,iBAAK;IACvCA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;IAC5BA,2BAAI;IAAAA,aAAoB;IAAAA,iBAAK;IAC7BA,2BAAI;IAC8BA;MAAA;MAAA;MAAA;MAAA,OAASA,qDAA4B;IAAA,EAAC;IAACA,qBAAI;IAAAA,iBAAS;IACpFA,kCAAsE;IAAvCA;MAAA;MAAA;MAAA;MAAA,OAASA,qDAA4B;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAPnFA,eAAuB;IAAvBA,0CAAuB;IACvBA,eAAqB;IAArBA,wCAAqB;IACrBA,eAA8B;IAA9BA,gEAA8B;IAC9BA,eAAmB;IAAnBA,sCAAmB;IACnBA,eAAoB;IAApBA,uCAAoB;;;ACZlC,OAAM,MAAOC,oBAAoB;EAK/BC,YAAoBC,cAA8B,EAAWC,MAAe;IAAxD,mBAAc,GAAdD,cAAc;IAA2B,WAAM,GAANC,MAAM;EAAa;EAEhFC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACH,cAAc,CAACI,cAAc,EAAE,CACjCC,SAAS,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAC;EACpD;EACAC,SAAS,CAACC,EAAU;IAClB,IAAIC,OAAO,CAAC,+CAA+C,CAAC,EAAE;MAC9D,IAAI,CAACT,cAAc,CAACU,aAAa,CAACF,EAAE,CAAC,CAACH,SAAS,CAAC,MAAK;QACnD,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACK,MAAM,CAACL,QAAQ,IAAIA,QAAQ,CAACM,SAAS,KAAKJ,EAAE,CAAC;MAC7E,CAAC,CAAC;;EACH;EACDK,SAAS,CAACL,EAAU;IAClB,IAAI,CAACP,MAAM,CAACa,QAAQ,CAAC,CAAC,eAAe,EAACN,EAAE,CAAC,CAAC;EAC5C;;AAvBWV,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTjCtB,0BAAI;MAAAA,wBAAQ;MAAAA,iBAAK;MACjBA,4BAAqD;MAAAA,2BAAW;MAAAA,iBAAI;MAEpEA,8BAAiB;MAKHA,mBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAChBA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MACnBA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAGnBA,8BAAO;MACLA,sEAUK;MACPA,iBAAQ;;;MAXkBA,gBAAW;MAAXA,sCAAW","names":["i0","ListCommentComponent","constructor","commentService","router","ngOnInit","getComments","getAllComments","subscribe","comments","deleteCom","id","confirm","removeComment","filter","idComment","updateCom","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\ibtih\\Downloads\\By-sellBack-backoffice1\\By-sellBack-backoffice1\\src\\app\\component\\Comment\\list-comment\\list-comment.component.html","C:\\Users\\ibtih\\Downloads\\By-sellBack-backoffice1\\By-sellBack-backoffice1\\src\\app\\component\\Comment\\list-comment\\list-comment.component.ts"],"sourcesContent":["<h2>Comments</h2>\n<a routerLink=\"/add-comment\" class=\"btn btn-success\">Add Comment</a>\n  \n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Content</th>\n          <th>Created At</th>\n          <th>Forum</th>\n          <th>Client</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let comment of comments\">\n          <td>{{ comment.idComment }}</td>\n          <td>{{ comment.content }}</td>\n          <td>{{ comment.createdAt | date }}</td>\n          <td>{{ comment.forum }}</td>\n          <td>{{ comment.client }}</td>\n          <td>\n            <button class=\"btn btn-primary\" (click)=\"updateCom(comment.idComment)\">Edit</button>\n            <button class=\"btn btn-danger\" (click)=\"deleteCom(comment.idComment)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommentService } from 'src/app/services/comment.service';\nimport { Comment } from '../../../models/comment';\n@Component({\n  selector: 'app-list-comment',\n  templateUrl: './list-comment.component.html',\n  styleUrls: ['./list-comment.component.scss']\n})\nexport class ListCommentComponent {\n\n\n  comments: Comment[];\n\n  constructor(private commentService: CommentService , private router : Router) { }\n\n  ngOnInit(): void {\n    this.getComments();\n  }\n\n  getComments(): void {\n    this.commentService.getAllComments()\n      .subscribe(comments => this.comments = comments);\n  }\n  deleteCom(id: number): void {\n    if (confirm(\"Are you sure you want to delete this comment?\")) {\n    this.commentService.removeComment(id).subscribe(() => {\n      this.comments = this.comments.filter(comments => comments.idComment !== id);\n    });\n  }}\n  updateCom(id: number) {\n    this.router.navigate(['/edit-comment',id]);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}