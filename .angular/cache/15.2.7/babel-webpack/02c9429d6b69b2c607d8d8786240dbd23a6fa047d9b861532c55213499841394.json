{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DeliveryService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:9000/bns/DeliveryController';\n  }\n  addDelivery(delivery) {\n    return this.http.post(`${this.baseUrl}/addDelivery`, delivery);\n  }\n  updateDelivery(delivery) {\n    return this.http.put(`${this.baseUrl}/updateDelivery`, delivery);\n  }\n  deleteDelivery(id) {\n    return this.http.put(`${this.baseUrl}/deleteDelivery/${id}`, null);\n  }\n  getListDelivery() {\n    return this.http.get(`${this.baseUrl}/GetListDelivery`);\n  }\n  getListDeliveryById(id) {\n    return this.http.get(`${this.baseUrl}/GetListDeliveryById/${id}`);\n  }\n  assignDelivererToDelivery(idDelivery, idDeliverer) {\n    const params = {\n      idDelivery: idDelivery.toString(),\n      idDeliverer: idDeliverer.toString()\n    };\n    return this.http.put(`${this.baseUrl}/assignDelivererToDelivery`, null, {\n      params\n    });\n  }\n  assignDeliveryToOrder(idOrder, idDelivery) {\n    const params = {\n      idOrder: idOrder.toString(),\n      idDelivery: idDelivery.toString()\n    };\n    return this.http.put(`${this.baseUrl}/assignDeliveryToOrder`, null, {\n      params\n    });\n  }\n  availableDelivery(id) {\n    return this.http.get(`${this.baseUrl}/availableDelivery/${id}`);\n  }\n}\nDeliveryService.ɵfac = function DeliveryService_Factory(t) {\n  return new (t || DeliveryService)(i0.ɵɵinject(i1.HttpClient));\n};\nDeliveryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DeliveryService,\n  factory: DeliveryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,8CAA8C;EAExB;EAExCC,WAAW,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAW,GAAG,IAAI,CAACC,OAAO,cAAc,EAAEF,QAAQ,CAAC;EAC1E;EAEAG,cAAc,CAACH,QAAkB;IAC/B,OAAO,IAAI,CAACF,IAAI,CAACM,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,iBAAiB,EAAEF,QAAQ,CAAC;EAC5E;EAEAK,cAAc,CAACC,EAAU;IACvB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,mBAAmBI,EAAE,EAAE,EAAE,IAAI,CAAC;EAC9E;EAEAC,eAAe;IACb,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAa,GAAG,IAAI,CAACN,OAAO,kBAAkB,CAAC;EACrE;EAEAO,mBAAmB,CAACH,EAAU;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACN,OAAO,wBAAwBI,EAAE,EAAE,CAAC;EAC7E;EAEAI,yBAAyB,CAACC,UAAkB,EAAEC,WAAmB;IAC/D,MAAMC,MAAM,GAAG;MACbF,UAAU,EAAEA,UAAU,CAACG,QAAQ,EAAE;MACjCF,WAAW,EAAEA,WAAW,CAACE,QAAQ;KAClC;IACD,OAAO,IAAI,CAAChB,IAAI,CAACM,GAAG,CAAO,GAAG,IAAI,CAACF,OAAO,4BAA4B,EAAE,IAAI,EAAE;MAAEW;IAAM,CAAE,CAAC;EAC3F;EAEAE,qBAAqB,CAACC,OAAe,EAAEL,UAAkB;IACvD,MAAME,MAAM,GAAG;MACbG,OAAO,EAAEA,OAAO,CAACF,QAAQ,EAAE;MAC3BH,UAAU,EAAEA,UAAU,CAACG,QAAQ;KAChC;IACD,OAAO,IAAI,CAAChB,IAAI,CAACM,GAAG,CAAO,GAAG,IAAI,CAACF,OAAO,wBAAwB,EAAE,IAAI,EAAE;MAAEW;IAAM,CAAE,CAAC;EACvF;EAEAI,iBAAiB,CAACX,EAAU;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACN,OAAO,sBAAsBI,EAAE,EAAE,CAAC;EACzE;;AA5CWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAsB,SAAftB,eAAe;EAAAuB,YAFd;AAAM","names":["DeliveryService","constructor","http","addDelivery","delivery","post","baseUrl","updateDelivery","put","deleteDelivery","id","getListDelivery","get","getListDeliveryById","assignDelivererToDelivery","idDelivery","idDeliverer","params","toString","assignDeliveryToOrder","idOrder","availableDelivery","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ibtih\\Downloads\\By-sellBack-backoffice1\\By-sellBack-backoffice1\\src\\app\\services\\delivery.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Delivery } from '../models/delivery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeliveryService {\n\n  private baseUrl = 'http://localhost:9000/bns/DeliveryController';\n\n  constructor(private http: HttpClient) { }\n\n  addDelivery(delivery: Delivery): Observable<Delivery> {\n    return this.http.post<Delivery>(`${this.baseUrl}/addDelivery`, delivery);\n  }\n\n  updateDelivery(delivery: Delivery): Observable<Delivery> {\n    return this.http.put<Delivery>(`${this.baseUrl}/updateDelivery`, delivery);\n  }\n\n  deleteDelivery(id: number): Observable<Delivery> {\n    return this.http.put<Delivery>(`${this.baseUrl}/deleteDelivery/${id}`, null);\n  }\n\n  getListDelivery(): Observable<Delivery[]> {\n    return this.http.get<Delivery[]>(`${this.baseUrl}/GetListDelivery`);\n  }\n\n  getListDeliveryById(id: number): Observable<Delivery> {\n    return this.http.get<Delivery>(`${this.baseUrl}/GetListDeliveryById/${id}`);\n  }\n\n  assignDelivererToDelivery(idDelivery: number, idDeliverer: number): Observable<void> {\n    const params = {\n      idDelivery: idDelivery.toString(),\n      idDeliverer: idDeliverer.toString()\n    };\n    return this.http.put<void>(`${this.baseUrl}/assignDelivererToDelivery`, null, { params });\n  }\n\n  assignDeliveryToOrder(idOrder: number, idDelivery: number): Observable<void> {\n    const params = {\n      idOrder: idOrder.toString(),\n      idDelivery: idDelivery.toString()\n    };\n    return this.http.put<void>(`${this.baseUrl}/assignDeliveryToOrder`, null, { params });\n  }\n\n  availableDelivery(id: number): Observable<string> {\n    return this.http.get<string>(`${this.baseUrl}/availableDelivery/${id}`);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}